!function(){"use strict";class t{constructor(t){let{popupSelector:e}=t;this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._handleClickClose=this._handleClickClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),this.setEventListeners()}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("click",this._handleClickClose)}_handleEscClose(t){"Escape"===t.key&&this.close()}_handleClickClose(t){(t.target.classList.contains("modal")||t.target.classList.contains("modal__button-exit"))&&this.close()}setEventListeners(){document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("click",this._handleClickClose)}}class e extends t{constructor(t,e){super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=e,this._inputs=this._popupForm.querySelectorAll(".form__input")}_getInputValues(){const t={};return this._inputs.forEach((e=>{t[e.name]=e.value})),t}_submitForm=()=>{const t=this._getInputValues();this._handleFormSubmit(t)};setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",this._submitForm)}close(){this._popupForm.reset(),super.close(),this._popupForm.removeEventListener("submit",this._submitForm)}}const s=document.querySelector("#profile-edit-button"),i=document.querySelector("#form-input-name"),n=document.querySelector("#form-input-description"),r=document.querySelector("#card-add-button"),o={};var l;l={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},Array.from(document.querySelectorAll(l.formSelector)).forEach((t=>{const e=new class{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=e}_showInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}resetValidation(){this._toggleButtonState(),this._inputElements.forEach((t=>{this._hideInputError(t)}))}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_hasInvalidInput(){return this._inputElements.some((t=>!t.validity.valid))}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_disableButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._inputElements.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))})),this._toggleButtonState()}enableValidation(){this._form.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}}(l,t),s=t.getAttribute("name");o[s]=e,e.enableValidation()}));const a=new class extends t{constructor(t){super({popupSelector:t}),this._previewImage=document.querySelector(".modal__image"),this._previewCaption=document.querySelector(".modal__preview-caption")}open(t,e){this._previewImage.src=e,this._previewCaption.textContent=t,this._previewImage.alt=`Photo of ${t}`,super.open()}}("#modal-preview-image"),c=new e("#modal-add-card",(function(t){const{name:e,link:s}=t,i=m({name:e,link:s});_.prependItem(i),c.close()})),d=new e("#modal-profile-edit",(function(t){const{name:e,description:s}=t;u.setUserInfo(e,s),d.close()})),u=new class{constructor(t,e){this._nameElement=t,this._descripElement=e}getUserInfo(){const t={};return t.profileName=this._nameElement.textContent,t.description=this._descripElement.textContent,t}setUserInfo(t,e){this._nameElement.textContent=t,this._descripElement.textContent=e}}(document.querySelector(".profile__name"),document.querySelector(".profile__subtitle"));function h(t){let{name:e,link:s}=t;a.open(e,s)}function m(t){return new class{constructor(t,e,s){this._name=t.name,this._link=t.link,this._cardSelector=e,this._handleCardClick=s}_setEventListeners(){this._cardImage.addEventListener("click",(()=>{this._handleCardClick({name:this._name,link:this._link})})),this._likeButton.addEventListener("click",(()=>this._handleLikeButton())),this._deleteButton.addEventListener("click",(()=>this._handleDeleteButton()))}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteButton(){this._cardElement.remove()}_getTemplate(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardElement}getView(){return this._cardElement=this._getTemplate(),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage.src=this._link,this._cardTitle.textContent=this._name,this._cardImage.alt=`Photo of ${this._name}`,this._setEventListeners(),this._cardElement}}(t,"#card-template",h).getView()}const _=new class{constructor(t,e){let{items:s,renderer:i}=t;this._renderedItems=s,this._renderer=i,this._container=document.querySelector(e)}renderItems(){this._renderedItems.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.append(t)}prependItem(t){this._container.prepend(t)}}({items:[{name:"Alaverdi, Armenia",link:"https://images.unsplash.com/photo-1543862475-eb136770ae9b?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80"},{name:"Angkor Wat, Cambodia",link:"https://images.unsplash.com/photo-1600807455249-89d2e285b9e0?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80"},{name:"Arches National Park, USA",link:"https://images.unsplash.com/photo-1527333656061-ca7adf608ae1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1374&q=80"},{name:"Redwood National Park, USA",link:"https://images.unsplash.com/photo-1547014762-3a94fb4df70a?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=686&q=80"},{name:"Mount Fuji, Japan",link:"https://images.unsplash.com/photo-1490806843957-31f4c9a91c65?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1740&q=80"},{name:"Deadvlei, Namibia",link:"https://images.unsplash.com/photo-1448831338187-78296e6fdc4d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1738&q=80"}],renderer:t=>{const e=m(t);_.addItem(e)}},".gallery__list");_.renderItems(),s.addEventListener("click",(()=>{const{profileName:t,description:e}=u.getUserInfo();i.value=t,n.value=e,d.open(),o["profile-form"].resetValidation()})),r.addEventListener("click",(()=>{c.open(),o["card-form"].resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,